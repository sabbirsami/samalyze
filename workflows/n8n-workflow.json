{
  "meta": {
    "instanceId": "n8n-workflow"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "support-ticket",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "support-ticket-webhook"
    },
    {
      "parameters": {
        "functionCode": "// Extract and validate incoming data\nconst webhookData = $input.first().json;\nconst body = webhookData.body || webhookData;\n\nif (!body || !body.ticketId || !body.message) {\n  throw new Error('Missing required fields: ticketId or message');\n}\n\nconst currentDate = new Date().toISOString();\n\nreturn {\n  ticketId: body.ticketId,\n  message: body.message,\n  email: body.email || 'N/A',\n  subject: body.subject || 'Support Request',\n  timestamp: currentDate,\n  status: 'New'\n};"
      },
      "id": "prepare-data-node",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [440, 300]
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "=ðŸŽ« *New Support Ticket*\n\n*Ticket ID:* {{ $json.ticketId }}\n*Subject:* {{ $json.subject }}\n*Email:* {{ $json.email }}\n*Timestamp:* {{ $json.timestamp }}\n\n*Message:*\n{{ $json.message }}",
        "parseMode": "Markdown",
        "additionalFields": {}
      },
      "id": "telegram-node",
      "name": "Send to Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [640, 200],
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIALS_ID",
          "name": "Telegram Bot Credentials"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": "1O9bAKNfhJKOr8eQdbZrWr1aoVOHIIBzVXU3moR2vAaQ",
        "sheetName": "Support Tickets",
        "columnToMatchOn": "ticketId",
        "valuesToMatchOn": "={{$node[\"Prepare Data\"].json[\"ticketId\"]}}",
        "fieldsUi": {
          "values": [
            {
              "fieldName": "Ticket ID",
              "fieldValue": "={{$node[\"Prepare Data\"].json[\"ticketId\"]}}"
            },
            {
              "fieldName": "Subject",
              "fieldValue": "={{$node[\"Prepare Data\"].json[\"subject\"]}}"
            },
            {
              "fieldName": "Email",
              "fieldValue": "={{$node[\"Prepare Data\"].json[\"email\"]}}"
            },
            {
              "fieldName": "Message",
              "fieldValue": "={{$node[\"Prepare Data\"].json[\"message\"]}}"
            },
            {
              "fieldName": "Timestamp",
              "fieldValue": "={{$node[\"Prepare Data\"].json[\"timestamp\"]}}"
            },
            {
              "fieldName": "Status",
              "fieldValue": "={{$node[\"Prepare Data\"].json[\"status\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "google-sheets-node",
      "name": "Save to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1040, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_SHEETS_CREDENTIALS_ID",
          "name": "Google Sheets Credentials"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Combine results from sequential operations\nconst preparedData = $node[\"Prepare Data\"].json;\nconst telegramResult = $node[\"Send to Telegram\"].json;\nconst sheetsResult = $input.first().json; // Current node input from Google Sheets\n\nreturn {\n  success: true,\n  ticketId: preparedData.ticketId,\n  timestamp: preparedData.timestamp,\n  telegramSent: !!telegramResult.message_id,\n  sheetUpdated: !!sheetsResult.updatedRows || !!sheetsResult.spreadsheetId,\n  message: 'Support ticket processed successfully'\n};"
      },
      "id": "final-response-node",
      "name": "Final Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [840, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "Send to Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Telegram": {
      "main": [
        [
          {
            "node": "Save to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Google Sheets": {
      "main": [
        [
          {
            "node": "Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-30T00:00:00.000Z",
  "versionId": "2"
}
